---
- name: Include system dependant vars
  include_vars:
    file: "{{ ansible_system }}_{{ ansible_architecture }}.yml"

- name: Download kapow
  get_url:
    url: "{{ kapow_dist_base_url }}/v{{ kapow_version }}/kapow_{{ kapow_version }}_{{ kapow_arch }}"
    dest: "{{ kapow_bin_dir }}/kapow"
    mode: '0755'
    checksum: "{{ kapow_checksum }}"
  notify: restart kapow

- name: Create kapow service account
  user:
    name: "{{ kapow_user }}"
    comment: kapow service account
    state: present
    system: yes

- name: Create kapow config dir
  file:
    path: "{{ kapow_config }}"
    owner: "{{ kapow_user }}"
    group: root
    mode: 0755
    state: directory

- name: Create kapow-restore-routes
  template:
    src: kapow-restore-routes.sh.j2
    dest: "/usr/local/bin/kapow-restore-routes.sh"
    owner: root
    group: root
    mode: 0755

- name: Configure kapow systemd service
  template:
    src: kapow.service.j2
    dest: "/etc/systemd/system/{{ kapow_service }}.service"
  notify: restart kapow

- name: Enable kapow systemd service
  systemd:
    name: "{{ kapow_service }}"
    state: started
    enabled: yes
    daemon_reload: yes

- name: Restart kapow
  meta: flush_handlers

- name: Waits for port kapow to listen on control bind port
  wait_for:
    host: "{{ kapow_control_bind.split(':')[0] }}"
    port: "{{ kapow_control_bind.split(':')[1] }}"
    timeout: 5

- name: Configure kapow routes
  kapow_route:
    method: "{{ item.method | default('GET') }}"
    url_pattern: "{{ item.url_pattern }}"
    command: "{{ item.command }}"
    entrypoint: "{{ item.entrypoint | default('/bin/sh -c') }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ kapow_routes }}"
  when: kapow_routes is defined
  notify: dump kapow routes

- name: Check if "{{ kapow_config }}/routes" exists
  stat:
    path: "{{ kapow_config }}/routes"
  register: kapow_config_file

- name: Dump kapow routes when configuration changes
  shell: kapow route list > "{{ kapow_config }}/routes"
  when: not kapow_config_file.stat.exists